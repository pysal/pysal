.. _installation:

================
Installing PySAL
================

.. contents::

Prerequisites
=============


Before installing PySAL, make sure the following libraries are properly
installed on your machine:


* `Python <http://www.python.org/>`_ 2.5 or later
* `Numpy <http://new.scipy.org/download.html>`_ 1.3 or later
* `Scipy <http://new.scipy.org/download.html>`_ 0.7 or later


*Optional, bundled installation:* 

The Anaconda Python distribution ships with PySAL. 
Check it out `here <http://continuum.io/downloads.html>`_.

With the `Enthought Python Distribution (EPD Free) <http://www.enthought.com/products/epd_free.php>`_, 
you will install all of PySAL's required dependencies, as well as iPython and a lot more, rather than installing dependencies one by one.
The full-blown EPD package is free for academics, and downloadable `here <http://www.enthought.com/products/edudownload.php>`_. 

* Optional, tools to compile our documentation:*

* `Sphinx <http://sphinx.pocoo.org/>`_
* `numpydoc <http://pypi.python.org/pypi/numpydoc/0.4>`_  extension to Sphinx (*not included in EPD*)

*Optional, recommended additions:*

* `iPython <http://ipython.scipy.org/moin/Download>`_

Getting PySAL
=============

PySAL is available on the `Python Package Index
<http://pypi.python.org/pypi/PySAL>`_, which means it can be
downloaded and installed manually or from the command line using easy_install or pip, as
follows::

 $ pip install pysal
  - or -
 $ easy_install pysal

Alternatively, grab the source distribution (.tar.gz) and decompress it to your selected destination. Open a command shell and navigate to the decompressed PySAL folder. Type::

 $ python setup.py install

Windows users can download a graphical installer from
`Sourceforge <http://sourceforge.net/projects/pysal/files/?source=navbar>`_.

Development version on GitHub 
-----------------------------

Developers can checkout PySAL using **git**::

 $ git clone https://github.com/pysal/pysal.git pysal

This will create a directory called 'pysal' containing the source
code.
Open a command shell and navigate to the cloned PySAL
directory. Type::

 $ python setup.py develop

The 'develop' subcommand builds the modules in place 
and modifies sys.path to include the code.
The advantage of this method is that you get the latest code 
but don't have to fuss with editing system environment variables.

To test your setup, start a Python session and type::

 >>> import pysal

Keep up to date with PySAL development by 'pulling' the latest
changes::

 $ git pull

Windows
~~~~~~~~

To keep up to date with PySAL development, you will need a Git client that allows you to access and 
update the code from our repository. We recommend 
`GitHub Windows <http://windows.github.com/>`_ for a more graphical client, or
`Git Bash <https://code.google.com/p/msysgit/downloads/list?q=label:Featured>`_ for a
command line client. This one gives you a nice Unix-like shell with
familiar commands. Here is `a nice tutorial
<http://openhatch.org/missions/windows-setup/>`_ on getting going with Open
Source software on Windows. 

After cloning PySAL, install it in develop mode so Python knows where to find it. 

Open a command shell and navigate to the cloned PySAL
directory. Type::

 $ python setup.py develop

To test your setup, start a Python session and type::

 >>> import pysal

Keep up to date with PySAL development by 'pulling' the latest
changes::

 $ git pull


Known Issues
============

1.5 install fails with scipy 11.0 on Mac OS X
---------------------------------------------

Running `python setup.py install` results in::

	from _cephes import *
	ImportError:
	dlopen(/Users/serge/Documents/p/pysal/virtualenvs/python1.5/lib/python2.7/site-packages/scipy/special/_cephes.so,
	2): Symbol not found: _aswfa_
	  Referenced from:
	  /Users/serge/Documents/p/pysal/virtualenvs/python1.5/lib/python2.7/site-packages/scipy/special/_cephes.so
	    Expected in: dynamic lookup

This occurs when your scipy on Mac OS X was complied with gnu95 and not
gfortran.  See `this thread <http://mail.scipy.org/pipermail/scipy-user/2010-November/027548.html>`_ for possible solutions.

weights.DistanceBand failing
----------------------------

This occurs due to a bug in scipy.sparse prior to version 0.8. If you are running such a version see `Issue 73 <http://code.google.com/p/pysal/issues/detail?id=73&sort=milestone>`_ for a fix.

doc tests and unit tests under Linux
------------------------------------

Some Linux machines return different results for the unit and doc tests. We suspect this has to do with the way random seeds are set. See `Issue 52 <http://code.google.com/p/pysal/issues/detail?id=52&sort=milestone>`_

LISA Markov missing a transpose
-------------------------------
In versions of PySAL < 1.1 there is a bug in the LISA Markov, resulting in
incorrect values. For a fix and more details see `Issue 115 <http://code.google.com/p/pysal/issues/detail?id=115>`_.


PIP Install Fails
-----------------


Having numpy and scipy specified in pip requiretments.txt causes PIP install of pysal to fail. For discussion and suggested fixes see `Issue 207 <http://code.google.com/p/pysal/issues/detail?id=207&sort=milestone>`_.

Troubleshooting
===============

If you experience problems when building, installing, or testing PySAL, ask for
help on the
`OpenSpace <http://geodacenter.asu.edu/support/community>`_ 
list or
browse the archives of the
`pysal-dev <http://groups.google.com/group/pysal-dev?pli=1>`_ 
google group. 

Please include the output of the following commands in your message:

1) Platform information::

    python -c 'import os,sys;print os.name, sys.platform'
    uname -a

2) Python version::
    
    python -c 'import sys; print sys.version'

3) SciPy version::

    python -c 'import scipy; print scipy.__version__'

3) NumPy version::

    python -c 'import numpy; print numpy.__version__'

4) Feel free to add any other relevant information.
   For example, the full output (both stdout and stderr) of the PySAL
   installation command can be very helpful. Since this output can be
   rather large, ask before sending it into the mailing list (or
   better yet, to one of the developers, if asked).




